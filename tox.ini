[tox]
minversion = 2.0
skipsdist = True
envlist = docs,linters,functional


[testenv]
usedevelop = True
install_command =
    pip install -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein} {opts} {packages}
commands =
    /usr/bin/find . -type f -name "*.pyc" -delete
passenv =
    COMMON_TESTS_PATH
    HOME
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY
    TESTING_BRANCH
    TESTING_HOME
    USER
whitelist_externals =
    bash
setenv =
    ANSIBLE_INVENTORY={toxinidir}/tests/lxb_inventory
    PYTHONUNBUFFERED=1
    ROLE_NAME=os_neutron
    TEST_IDEMPOTENCE=false
    VIRTUAL_ENV={envdir}
    WORKING_DIR={toxinidir}


[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands=
    bash -c "rm -rf doc/build"
    sphinx-build -b html doc/source doc/build/html


[doc8]
# Settings for doc8:
extensions = .rst


[testenv:releasenotes]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html


# environment used by the -infra templated docs job
[testenv:venv]
basepython = python3
commands =
    {posargs}


[testenv:pep8]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-pep8.sh"
    doc8 doc


[flake8]
# Ignores the following rules due to how ansible modules work in general
#     F403 'from ansible.module_utils.basic import *' used;
#          unable to detect undefined names
ignore=F403


[testenv:bashate]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-bashate.sh"


[testenv:ansible-syntax]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-syntax.sh"


[testenv:ansible-lint]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-lint.sh"


[testenv:functional]
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:distro_install]
setenv =
    {[testenv]setenv}
    ANSIBLE_PARAMETERS=-e @{toxinidir}/tests/common/test-distro_install-vars.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:ovs]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/ovs_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-ovs.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:calico]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/calico_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-calico.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:opendaylight]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/opendaylight_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-opendaylight.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:opendaylight-bgpvpn]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/opendaylight_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-opendaylight-bgpvpn.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:ovs-nsh]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/opendaylight_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-ovs-nsh.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"

[testenv:ovn]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/ovn_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-ovn.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:odl-sfc]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/opendaylight_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-odl-sfc.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:ovs-sfc]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/ovs_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-ovs-sfc.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:ovs-fwaasv2]
setenv =
    {[testenv]setenv}
    ANSIBLE_INVENTORY={toxinidir}/tests/ovs_inventory
    ANSIBLE_OVERRIDES={toxinidir}/tests/neutron-overrides-ovs-fwaasv2.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:linters]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-env-prep.sh"
    {[testenv:pep8]commands}
    {[testenv:bashate]commands}
    {[testenv:ansible-lint]commands}
    {[testenv:ansible-syntax]commands}
